name: CI/CD Pipeline - Next.js Blog
on:
  push:
    branches: develop

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: lucasjandrey5/meu_blog_v2

jobs:
  build_nextjs:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push Next.js image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/node/Dockerfile.prod
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: |
            type=gha
            type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cache
          cache-to: |
            type=gha,mode=max
            type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cache,mode=max
          platforms: linux/amd64

  deploy:
    needs: [build_nextjs]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Deploy to production
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          script: |
            cd ~/meu-blog/

            # Limpeza de containers parados e imagens não utilizadas
            docker container prune -f
            docker image prune -af

            # Pull da imagem Next.js com verificação de erro
            echo "Puxando imagem Next.js..."
            if ! docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}; then
              echo "ERRO: Falha ao puxar imagem Next.js"
              exit 1
            fi

            echo "Imagem puxada com sucesso!"

            export TAG=${{ github.sha }}

            envsubst < docker-stack.yml.template > docker-stack.yml

            docker stack deploy -c ~/meu-blog/docker-stack.yml app

            echo "Deploy concluído com sucesso!"
